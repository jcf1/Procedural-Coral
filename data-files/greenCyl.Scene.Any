/* -*- c++ -*- */
{ 
    name = "CORAL TEST"; 

    models = {
        cubeModel = ArticulatedModel::Specification {
            filename = "model/cube/cube.obj";
            preprocess = {
                setMaterial(all(), Color3(1,1,1));
                setTwoSided(all(), true);
            };
        };

        boardModel = ArticulatedModel::Specification {
            //filename = "ifs/square.ifs";
            filename = "star2.off";
            scale = 2;
            preprocess = {
                setMaterial(all(), 
                    UniversalMaterial::Specification {
                        lambertian = "test-lambertian.png";
                        bump = "test-bump.png"
                    });
                transformGeometry(all(), Matrix4::scale(2,2,2));
                setTwoSided(all(), true);
            };
        };

        board2Model = ArticulatedModel::Specification {
            filename = "star2.off";
            scale = 2;
            preprocess = {
                setMaterial(all(), 
                    UniversalMaterial::Specification {
                        lambertian = "finger-lambertian.png";
                        bump = "finger-bump.png"
                    });
                transformGeometry(all(), Matrix4::scale(2,2,2));
                setTwoSided(all(), true);
            };
        };

        branchModel = ArticulatedModel::Specification {
            filename = "star2.off";
            scale = 2;
            preprocess = {
                setMaterial(all(), 
                    UniversalMaterial::Specification {
                        lambertian = "branch-lambertian.png";
                        bump = "branch-bump.png"
                    });
                transformGeometry(all(), Matrix4::scale(2,2,2));
                setTwoSided(all(), true);
            };
        };

        thinModel = ArticulatedModel::Specification {
            filename = "star2.off";
            scale = 2;
            preprocess = {
                setMaterial(all(), 
                    UniversalMaterial::Specification {
                        lambertian = "thin-lambertian.png";
                        bump = "thin-bump.png"
                    });
                transformGeometry(all(), Matrix4::scale(2,2,2));
                setTwoSided(all(), true);
            };
        };

        starModel = ArticulatedModel::Specification {
            filename = "star2.off";
            scale = 2;
            preprocess = {
                setMaterial(all(), 
                    UniversalMaterial::Specification {
                        lambertian = "thin-lambertian.png";
                        bump = "thin-bump.png"
                    });
                setTwoSided(all(), true);
            };
        };

        boxModel = ArticulatedModel::Specification { 
            //filename = "model/CornellBox/CornellBox.zip/CornellBox-Water.obj";
            filename = "water.obj";
            preprocess = {
                transformGeometry(all(), Matrix4::scale(4,4,4));
            };
        };
    };

    entities = { 
        
        skybox = Skybox { 
            texture = "cubemap/whiteroom/whiteroom-*.png"; 
        };
        
        light1 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 0, -90, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light2 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 0, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light3 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light4 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, -90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light5 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.5, 0, 180, 0, 180 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        };

        /*sun = Light { 
            attenuation = (0, 0, 1); 
            bulbPower = Power3(70); 
            frame = CFrame::fromXYZYPRDegrees(-15, 207, -41, -164, -77, 77);
            shadowMapSize = Vector2int16(2048, 2048); 
            spotHalfAngleDegrees = 5; 
            spotSquare = true; 
            type = "SPOT"; 
        }; */

       cube1 = VisibleEntity {
            model = "boardModel";
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, 0, 0);

        };

        cube2 = VisibleEntity {
            model = "board2Model";
            frame = CFrame::fromXYZYPRDegrees(.5, 0, .5, 0, 0, 0);

        };

        cube3 = VisibleEntity {
            model = "branchModel";
            frame = CFrame::fromXYZYPRDegrees(1, 1.5, .5, 0, 0, 0);

        };

        cube4 = VisibleEntity {
            model = "thinModel";
            frame = CFrame::fromXYZYPRDegrees(.5, .3, 1, 0, 0, 0);

        };

        /*cube0 = VisibleEntity {
            model = "starModel";
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, 0, 0);

        };*/

        box = VisibleEntity { 
            frame = Vector3(0, -.3, 0); 
            model = "boxModel"; 
        };

        camera = Camera {
            frame = CFrame::fromXYZYPRDegrees(0, 0, 5);
        };
    };
};
